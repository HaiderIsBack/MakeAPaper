
.auth-back 
{
  position: absolute;
  width: 100vw;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 2px;
  flex-wrap: wrap;
  overflow: hidden;
}
.auth-back::before 
{
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  background: linear-gradient(transparent,var(--site-text-secondary),transparent);
  animation: animate 5s ease-out infinite;
}
@keyframes animate 
{
  0%
  {
    transform: translateY(-100%);
  }
  100%
  {
    transform: translateY(100%);
  }
}
.auth-back span 
{
  position: relative;
  display: block;
  width: calc(6.25vw - 2px);
  height: calc(6.25vw - 2px);
  background: #181818;
  z-index: 2;
  transition: 1.5s;
}
.auth-back span:hover 
{
  background: var(--site-text-primary);
  transition: 0s;
}

.auth-back .auth
{
  position: absolute;
  width: 400px;
  background: #222;  
  z-index: 1000;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 40px;
  border-radius: 4px;
  box-shadow: 0 15px 35px rgba(0,0,0,9);
}
.auth-back .auth .content 
{
  position: relative;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: 40px;
}
.auth-back .auth .content h2 
{
  font-size: 2em;
  color: var(--site-text-primary);
  text-transform: uppercase;
}
.auth-back .auth .content .form 
{
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 25px;
}
.auth-back .auth .content .form .inputBox
{
  position: relative;
  width: 100%;
}
.auth-back .auth .content .form .inputBox input 
{
  position: relative;
  width: 100%;
  background: #333;
  border: none;
  outline: none;
  padding: 25px 10px 7.5px;
  border-radius: 4px;
  color: #fff;
  font-weight: 500;
  font-size: 1em;
}
.auth-back .auth .content .form .inputBox i 
{
  position: absolute;
  left: 0;
  padding: 15px 10px;
  font-style: normal;
  color: #aaa;
  transition: 0.5s;
  pointer-events: none;
}
.auth .content .form .inputBox input:focus ~ i,
.auth .content .form .inputBox input:valid ~ i
{
  transform: translateY(-7.5px);
  font-size: 0.8em;
  color: #fff;
}
.auth .content .form .links 
{
  position: relative;
  width: 100%;
  display: flex;
  justify-content: space-between;
}
.auth .content .form .links a 
{
  color: #fff;
  text-decoration: none;
}
.auth .content .form .links a:nth-child(2)
{
  color: var(--site-text-secondary);
  font-weight: 600;
}
.auth .content .form .inputBox button[type="submit"]
{
  padding: 10px;
  background: var(--site-text-primary);
  color: #000;
  font-weight: 600;
  font-size: 1.35em;
  letter-spacing: 0.05em;
  cursor: pointer;
  width: 100%;
  border: none;
  border-radius: 7px;
}
.auth button[type="submit"]:active
{
  opacity: 0.6;
}
@media (max-width: 900px)
{
  .auth-back span 
  {
    width: calc(10vw - 2px);
    height: calc(10vw - 2px);
  }
}
@media (max-width: 600px)
{
  .auth-back span 
  {
    width: calc(20vw - 2px);
    height: calc(20vw - 2px);
  }
}

.auth-2{
  width: 100%;
  height: 100vh;
  height: 100dvh;
  display: flex;
  justify-content: center;
  align-items: center;
}

.auth-2 form{
  width: 350px;
  position: relative;
  border: 2px solid #000;
  display: flex;
  flex-direction: column;
  align-items: start;
  padding: 20px;
  border-radius: 10px;
}

.auth-2 form h2{
  align-self: center;
}

.auth-2 form img{
  position: absolute;
  top: 0%;
  left: 0%;
  width: 50px;
  height: 50px;
  animation: rotation 5s linear infinite;
}

.auth-2 form label{
  margin-top: 15px;
}

.auth-2 .password-input{
  position: relative;
  width: 100%;
}

.auth-2 .password-eye-icon {
  position: absolute;
  top: 50%;
  right: 5%;
  transform: translate(-50%, -50%);
  cursor: pointer;
}

.auth-2 form input{
  width: 100%;
  height: 40px;
  border-radius: 10px;
  border: 1px solid #000;
  padding: 0 10px;
}

.auth-2 .password-input input{
  padding-right: 50px;
}

.auth-2 form button{
  width: 100%;
  height: 40px;
  background: #000;
  color: #fff;
  border-radius: 10px;
  border: none;
  outline: none;
  margin-top: 15px;
}

@keyframes rotation {
  from{
    transform: translate(-50%, -50%) rotate(0deg);
  }
  to{
    transform: translate(-50%, -50%) rotate(360deg);
  }
}